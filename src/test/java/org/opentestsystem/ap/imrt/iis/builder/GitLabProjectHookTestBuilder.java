package org.opentestsystem.ap.imrt.iis.builder;

import org.gitlab4j.api.models.ProjectHook;

import java.util.Date;

public class GitLabProjectHookTestBuilder {
    public static final Integer DEFAULT_PROJECT_HOOK_ID = 13;

    private Boolean buildEvents = true;
    private Date createdAt = new Date();
    private Boolean enableSslVerification = true;
    private Integer id = DEFAULT_PROJECT_HOOK_ID;
    private Boolean issuesEvents = true;
    private Boolean mergeRequestsEvents = true;
    private Boolean noteEvents = true;
    private Boolean jobEvents = true;
    private Boolean pipelineEvents = true;
    private Integer projectId = GitLabProjectTestBuilder.DEFAULT_PROJECT_ID;
    private Boolean pushEvents = true;
    private Boolean tagPushEvents = true;
    private String url = "http://docker.for.mac.host.internal:8080/webHook";
    private Boolean wikiPageEvents = true;
    private String token = "token";

    public ProjectHook build() {
        ProjectHook hook = new ProjectHook();
        hook.setBuildEvents(buildEvents);
        hook.setCreatedAt(createdAt);
        hook.setEnableSslVerification(enableSslVerification);
        hook.setId(id);
        hook.setIssuesEvents(issuesEvents);
        hook.setMergeRequestsEvents(mergeRequestsEvents);
        hook.setNoteEvents(noteEvents);
        hook.setJobEvents(jobEvents);
        hook.setPipelineEvents(pipelineEvents);
        hook.setProjectId(projectId);
        hook.setPushEvents(pushEvents);
        hook.setTagPushEvents(tagPushEvents);
        hook.setUrl(url);
        hook.setWikiPageEvents(wikiPageEvents);
        hook.setToken(token);

        return hook;
    }

    public GitLabProjectHookTestBuilder withBuildEvents(final boolean buildEvents) {
        this.buildEvents = buildEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withCreatedAt(final Date createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public GitLabProjectHookTestBuilder withEnableSslVerification(final boolean enableSslVerification) {
        this.enableSslVerification = enableSslVerification;
        return this;
    }

    public GitLabProjectHookTestBuilder withId(final int id) {
        this.id = id;
        return this;
    }

    public GitLabProjectHookTestBuilder withIssuesEvents(final boolean issuesEvents) {
        this.issuesEvents = issuesEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withMergeRequestEvents(final boolean mergeRequestEvents) {
        this.mergeRequestsEvents = mergeRequestEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withNoteEvents(final boolean noteEvents) {
        this.noteEvents = noteEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withJobEvents(final boolean jobEvents) {
        this.jobEvents = jobEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withPipelineEvents(final boolean pipelineEvents) {
        this.pipelineEvents = pipelineEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withProjectId(final int projectId) {
        this.projectId = projectId;
        return this;
    }

    public GitLabProjectHookTestBuilder withPushEvents(final boolean pushEvents) {
        this.pushEvents = pushEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withTagPushEvents(final boolean tagPushEvents) {
        this.tagPushEvents = tagPushEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withUrl(final String url) {
        this.url = url;
        return this;
    }

    public GitLabProjectHookTestBuilder withWikiPageEvents(final boolean wikiPageEvents) {
        this.wikiPageEvents = wikiPageEvents;
        return this;
    }

    public GitLabProjectHookTestBuilder withToken(final String token) {
        this.token = token;
        return this;
    }
}
