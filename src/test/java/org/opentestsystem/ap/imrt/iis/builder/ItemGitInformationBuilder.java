package org.opentestsystem.ap.imrt.iis.builder;

import org.opentestsystem.ap.imrt.common.model.BaseItem;
import org.opentestsystem.ap.imrt.common.model.ItemGitInformation;

import java.time.Instant;
import java.util.UUID;

/**
 * A builder for creating an {@link org.opentestsystem.ap.imrt.common.model.ItemGitInformation} to use in unit and/or
 * integration tests.
 */
public class ItemGitInformationBuilder {
    public static final Integer DEFAULT_PROJECT_ID = 42;
    private BaseItem item = new ImrtItemBuilder().build();
    private Integer projectId = DEFAULT_PROJECT_ID;
    private String projectPath = "unit-test-path";
    private String currentCommitHash = UUID.randomUUID().toString();
    private Instant currentCommitDate = Instant.now();
    private String ingestSource = "ingest-source";

    public ItemGitInformationBuilder withItem(final BaseItem item) {
        this.item = item;
        return this;
    }

    public ItemGitInformationBuilder withProjectId(final Integer projectId) {
        this.projectId = projectId;
        return this;
    }

    public ItemGitInformationBuilder withProjectPath(final String projectPath) {
        this.projectPath = projectPath;
        return this;
    }

    public ItemGitInformationBuilder withCurrentCommitHash(final String currentCommitHash) {
        this.currentCommitHash = currentCommitHash;
        return this;
    }

    public ItemGitInformationBuilder withCurrentCommitDate(final Instant currentCommitDate) {
        this.currentCommitDate = currentCommitDate;
        return this;
    }

    public ItemGitInformationBuilder withIngestSource(final String ingestSource) {
        this.ingestSource = ingestSource;
        return this;
    }

    public ItemGitInformation build() {
        final ItemGitInformation itemGitInformation = new ItemGitInformation();
        itemGitInformation.setItem(item);
        itemGitInformation.setProjectId(projectId);
        itemGitInformation.setProjectPath(projectPath);
        itemGitInformation.setCurrentCommitHash(currentCommitHash);
        itemGitInformation.setCurrentCommitDate(currentCommitDate);
        itemGitInformation.setIngestSource(ingestSource);

        return itemGitInformation;
    }
}
