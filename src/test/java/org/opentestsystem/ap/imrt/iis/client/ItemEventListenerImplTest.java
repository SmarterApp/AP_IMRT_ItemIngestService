package org.opentestsystem.ap.imrt.iis.client;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.imrt.common.service.OperationalEventService;
import org.opentestsystem.ap.imrt.iis.service.ItemUpdateWorkQueueService;

import static org.mockito.Matchers.any;
import static org.mockito.Matchers.eq;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;

@RunWith(MockitoJUnitRunner.class)
public class ItemEventListenerImplTest {

    @Mock
    private ItemBankClient itemBankClient;

    @Mock
    private ItemUpdateWorkQueueService itemUpdateWorkQueueService;

    @Mock
    private OperationalEventService operationalEventService;

    // Class under test
    private ItemEventListener listener;

    @Before
    public void setup() {
        listener = new ItemEventListenerImpl(operationalEventService, itemBankClient, itemUpdateWorkQueueService);
    }

    @Test
    public void testOnItemCreate() {
        int itemBankId = 33;
        listener.onCreateItem(itemBankId);
        verify(itemBankClient, times(1)).monitorItem(itemBankId);
        verify(operationalEventService, times(1)).itemMonitoredEvent(any(), eq(itemBankId));
    }

    @Test
    public void testOnItemUpdate() {
        int itemBankId = 55;

        listener.onUpdateItem(itemBankId);
        verify(itemUpdateWorkQueueService, times(1)).sendItemUpdateMessage(itemBankId);
    }
}
