package org.opentestsystem.ap.imrt.iis.core.mapper;

import org.junit.Test;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.common.model.TiItem;
import org.opentestsystem.ap.common.imrt.model.BaseItem;
import org.opentestsystem.ap.common.imrt.model.KeywordContent;

import java.util.Collection;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.fail;
import static org.mockito.Mockito.mock;
import static org.opentestsystem.ap.common.imrt.model.KeywordContentSection.SaSection.PROMPT;
import static org.opentestsystem.ap.common.imrt.model.KeywordContentSection.SaSection.SPANISH_PROMPT;

public class SaKeywordContentMapperTest {
    private SaKeywordContentMapper mapper = new SaKeywordContentMapper();

    @Test
    public void shouldHandleSaItems() {
        assertThat(mapper.isSupportedItem(new SaItem("123"))).isTrue();
    }

    @Test
    public void shouldConvertItemContent() {
        String englishContent = "    <p>English</p> text";
        String spanishContent = "Spanish     text ";

        SaItem saItem = new SaItem("123");
        saItem.getCore().getEn().setPrompt(englishContent);
        saItem.getTranslations().getEsp().setPrompt(spanishContent);
        BaseItem baseItem = mock(BaseItem.class);

        Collection<KeywordContent> keywordContents = mapper.findKeywordForItem(baseItem, saItem);

        assertThat(keywordContents).hasSize(2);

        for (KeywordContent content : keywordContents) {
            assertThat(content.getItem()).isEqualTo(baseItem);
            switch (content.getSection()) {
                case PROMPT:
                    assertThat(content.getContent()).isEqualTo("English text");
                    break;
                case SPANISH_PROMPT:
                    assertThat(content.getContent()).isEqualTo("Spanish text");
                    break;
                default:
                    fail("Found invalid section " + content.getSection());
            }
        }
    }

    @Test(expected = IllegalArgumentException.class)
    public void shouldHandleIfWrongTypeIsPassedIn() {
        mapper.findKeywordForItem(mock(BaseItem.class), new TiItem("123"));
    }
}