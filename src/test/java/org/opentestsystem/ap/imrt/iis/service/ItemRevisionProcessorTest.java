package org.opentestsystem.ap.imrt.iis.service;

import com.google.common.collect.Lists;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.imrt.common.model.ItemGitInformation;
import org.opentestsystem.ap.imrt.iis.core.ItemRevisionComparisonRule;
import org.opentestsystem.ap.imrt.iis.model.ItemRevision;

import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class ItemRevisionProcessorTest {

    @Mock
    private ItemRevisionComparisonRule rule1;

    @Mock
    private ItemRevisionComparisonRule rule2;

    @Mock
    private ItemRevision revision;

    private ItemRevisionProcessor runner;

    @Test
    public void shouldDoNothing() {
        runner = new ItemRevisionProcessor(Lists.newArrayList());

        runner.applyRules(new ItemGitInformation(), null,revision);
    }

    @Test
    public void shouldApplyRules() {
        runner = new ItemRevisionProcessor(Lists.newArrayList(rule1, rule2));
        ItemGitInformation existing = new ItemGitInformation();
        when(rule1.applyBusinessRule(existing, null, revision)).thenReturn(revision);
        when(rule2.applyBusinessRule(existing, null, revision)).thenReturn(revision);

        runner.applyRules(existing, null, revision);

        verify(rule1).applyBusinessRule(existing, null,revision);
        verify(rule2).applyBusinessRule(existing, null,revision);
    }
}
