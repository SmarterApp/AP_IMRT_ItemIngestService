package org.opentestsystem.ap.imrt.iis.message;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.imrt.common.exception.NotFoundException;
import org.opentestsystem.ap.imrt.common.service.OperationalEventService;
import org.opentestsystem.ap.imrt.iis.service.ItemValidationService;

import static org.mockito.Mockito.doThrow;
import static org.mockito.Mockito.verify;

@RunWith(MockitoJUnitRunner.class)
public class ItemValidationListenerTest {
    @Mock
    private OperationalEventService mockOperationalEventService;

    @Mock
    private ItemValidationService mockItemValidationService;

    private ItemValidationListener itemValidationListener;

    @Before
    public void setUp() {
        itemValidationListener = new ItemValidationListener(mockOperationalEventService, mockItemValidationService);
    }

    @Test
    public void shouldValidateItem() {
        itemValidationListener.handleMessage(1);

        verify(mockItemValidationService).validateItem(1);
    }

    @Test
    public void shouldNotRethrowNotFound() {
        doThrow(new NotFoundException("")).when(mockItemValidationService).validateItem(1);

        itemValidationListener.handleMessage(1);
        verify(mockItemValidationService).validateItem(1);
    }

    @Test(expected = RuntimeException.class)
    public void shouldRethrowUnhandledExceptions() {
        doThrow(new RuntimeException("")).when(mockItemValidationService).validateItem(1);

        itemValidationListener.handleMessage(1);
        verify(mockItemValidationService).validateItem(1);
    }
}