package org.opentestsystem.ap.imrt.iis.core.mapper;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class KeywordHtmlUtilTest {
    @Test
    public void shouldMapRichTextHtml() {
        String sampleHtmlText = "<p><sub>This</sub> <span style=\\\"font-size:22px;\\\">Stim</span> <strong>should</strong> <em>have</em> all <u>types</u> of HTML <sup>available&nbsp;</sup></p><p>&nbsp;</p><p>Symbol-1</p><p>Symbol&ndash;2</p><p>Symbol&mdash;3</p><p>&nbsp;</p><ol><li>number list 1</li><li>number list 2</li></ol><p>&nbsp;</p><p>Some other text with math ml&nbsp;<math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><msqrt><mn>3</mn></msqrt></math></p><p>&nbsp;</p><ul><li>bullet 1</li><li>bullet 2</li></ul><p>&nbsp;</p><p style=\\\"text-align: center;\\\">centered</p><p style=\\\"text-align: right;\\\">right</p><p>Some audio&nbsp;<img class=\\\"place-holder\\\" title=\\\"Audio Resource 1\\\" data-iat-audio-resource-id=\\\"1\\\" src=\\\"/assets/ckeditor/plugins/iataudio/icons/audio-place-01.png\\\" /></p><p>&nbsp;</p><p>An image&nbsp;<img class=\\\"place-holder\\\" title=\\\"Image Resource 1\\\" data-iat-image-resource-id=\\\"1\\\" src=\\\"/assets/ckeditor/plugins/iatimage/icons/image-place-01.png\\\" /></p><p>&nbsp;</p><p>Chemistry&nbsp;<math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" class=\\\"wrs_chemistry\\\"><mo>&#8710;</mo></math></p><p>&nbsp;</p><p><span class=\\\"iat-text2speech\\\" data-iat-tts=\\\"Some TTS\\\"><span class=\\\"iat-glossary-term\\\" data-iat-glossary-term-id=\\\"2\\\">Text</span> to speech</span> and <span class=\\\"iat-glossary-term\\\" data-iat-glossary-term-id=\\\"1\\\">glossary</span> tags</p><p>&nbsp;</p><p>Table</p><table cellpadding=\\\"1\\\" cellspacing=\\\"1\\\" border=\\\"1\\\" style=\\\"width: 500px;\\\"><tbody><tr><td>Header with image&nbsp;<img class=\\\"place-holder\\\" title=\\\"Image Resource 2\\\" data-iat-image-resource-id=\\\"2\\\" src=\\\"/assets/ckeditor/plugins/iatimage/icons/image-place-02.png\\\" /></td><td>Header with math ml&nbsp;<math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><mi>T</mi><mi>h</mi><mi>i</mi><mi>s</mi><mo>&#160;</mo><mi>i</mi><mi>s</mi><mo>&#160;</mo><mi>s</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>e</mi><mo>&#160;</mo><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi><mo>&#160;</mo><mi>s</mi><mi>y</mi><mi>m</mi><mi>b</mi><mi>o</mi><mi>l</mi><mo>&#160;</mo><msqrt><mn>2</mn></msqrt></math></td></tr><tr><td>Chemistry ML&nbsp;<math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" class=\\\"wrs_chemistry\\\"><mo>&#8710;</mo><mo>&#160;</mo><mi>is</mi><mo>&#160;</mo><mi mathvariant=\\\"normal\\\">a</mi><mo>&#160;</mo><mi>triangle</mi></math></td><td>Text</td></tr></tbody></table><p>&nbsp;</p>";
        String expectedHtmlText = "This Stim should have all types of HTML available Symbol-1 Symbol–2 Symbol—3 number list 1 number list 2 Some other text with math ml <math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><msqrt><mn>3</mn></msqrt></math> bullet 1 bullet 2 centered right Some audio An image Chemistry <math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" class=\\\"wrs_chemistry\\\"><mo>&#8710;</mo></math> Text to speech and glossary tags Table Header with image Header with math ml <math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\"><mi>T</mi><mi>h</mi><mi>i</mi><mi>s</mi><mo>&#160;</mo><mi>i</mi><mi>s</mi><mo>&#160;</mo><mi>s</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>e</mi><mo>&#160;</mo><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi><mo>&#160;</mo><mi>s</mi><mi>y</mi><mi>m</mi><mi>b</mi><mi>o</mi><mi>l</mi><mo>&#160;</mo><msqrt><mn>2</mn></msqrt></math> Chemistry ML <math xmlns=\\\"http://www.w3.org/1998/Math/MathML\\\" class=\\\"wrs_chemistry\\\"><mo>&#8710;</mo><mo>&#160;</mo><mi>is</mi><mo>&#160;</mo><mi mathvariant=\\\"normal\\\">a</mi><mo>&#160;</mo><mi>triangle</mi></math> Text";
        assertThat(KeywordContentUtil.convertContentToKeywordString(sampleHtmlText)).isEqualTo(expectedHtmlText);
    }

    @Test
    public void shouldMapNonHtml() {
        assertThat(KeywordContentUtil.convertContentToKeywordString("    This is a      test   ")).isEqualTo("This is a test");
    }
}