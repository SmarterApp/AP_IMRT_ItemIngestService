package org.opentestsystem.ap.imrt.iis.repository;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.imrt.common.model.ImrtItem;
import org.opentestsystem.ap.imrt.common.model.StimLink;
import org.opentestsystem.ap.imrt.common.model.StimLinkBuilder;
import org.opentestsystem.ap.imrt.iis.BaseIntegrationTest;
import org.springframework.beans.factory.annotation.Autowired;

import static org.assertj.core.api.Assertions.assertThat;

public class StimLinkRespositoryTest extends BaseIntegrationTest {

    @Autowired
    private StimLinkRepository stimLinkRepository;

    @Autowired
    ImrtItemRepository imrtItemRepository;

    private ImrtItem imrtItem = null;
    private ImrtItem stimImrtItem = null;

    @Before
    public void createItems() {
        // create items in the DB, for our foreign key constraint
        imrtItem = new TestImrtItemBuilder().build();
        imrtItem = imrtItemRepository.save(imrtItem);
        stimImrtItem = new TestImrtItemBuilder().build();
        stimImrtItem = imrtItemRepository.save(stimImrtItem);
    }

    @Test
    public void shouldCreateStimLink() {
        StimLink link = new StimLinkBuilder()
                .withImrtItem(imrtItem)
                .withStimImrtItem(stimImrtItem)
                .withUpdatedBy("me")
                .build();
        link = stimLinkRepository.save(link);
        assertThat(link).isEqualToComparingFieldByFieldRecursively(stimLinkRepository.findOne(link.getStimLinkKey()));
    }

    @Test
    public void shouldDeleteStandardId() {
        StimLink link = new StimLinkBuilder()
                .withImrtItem(imrtItem)
                .withStimImrtItem(stimImrtItem)
                .withUpdatedBy("me")
                .build();
        link = stimLinkRepository.save(link);
        // There should be one row in the DB after the save
        assertThat(stimLinkRepository.findAll().size()).isEqualTo(1);
        stimLinkRepository.delete(link.getStimLinkKey());
        // There should be no rows in the DB after the delete
        assertThat(stimLinkRepository.findAll().size()).isEqualTo(0);

    }
}
