package org.opentestsystem.ap.imrt.iis.repository;

/**
 * Handles interaction with the project_lock repository
 */
public interface ProjectLockRepository {
    /**
     * Attempts to acquire a lock. Throws a {@link org.opentestsystem.ap.imrt.iis.exception.ProjectUnlockException}
     * if the lock cannot be acquired.
     *
     * @param itemId Unique identifier for the project
     * @return A unique identifier for the lock, which must be used in the call to unlock.
     *
     */
    long acquireLock(int itemId);

    /**
     * Attempts to release a lock. If the current lock does not match the supplied lock value,
     * then a {@link org.opentestsystem.ap.imrt.iis.exception.ProjectUnlockException} will be thrown.
     *
     * @param itemId Unique identifier for the project
     * @param lockId    Unique identifier for the lock, as returned from a call to lockProject
     */
    void releaseLock(int itemId, long lockId);
}
