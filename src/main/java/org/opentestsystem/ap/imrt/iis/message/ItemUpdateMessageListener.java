package org.opentestsystem.ap.imrt.iis.message;

import org.opentestsystem.ap.imrt.common.service.OperationalEventService;
import org.opentestsystem.ap.imrt.iis.service.ItemUpdateNotificationHandler;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import java.awt.event.ItemListener;

/**
 * Handles processing of item update message listener
 */
@Component
public class ItemUpdateMessageListener implements ItemMessageListener {
    private static final Logger logger = LoggerFactory.getLogger(ItemUpdateMessageListener.class);
    private final ItemUpdateNotificationHandler itemUpdateNotificationHandler;
    private final OperationalEventService operationalEventService;

    @Autowired
    public ItemUpdateMessageListener(@Qualifier("itemUpdateNotificationHandler") final ItemUpdateNotificationHandler itemUpdateNotificationHandler,
                                     final OperationalEventService operationalEventService) {
        this.itemUpdateNotificationHandler = itemUpdateNotificationHandler;
        this.operationalEventService = operationalEventService;
    }

    /**
     * Handles the item update message
     *
     * @param itemBankId the item bank id for the item.
     */
    @Override
    public void handleMessage(final Integer itemBankId) {
        logger.debug("Received item update message for item bank id: {}", itemBankId);

        try {
            itemUpdateNotificationHandler.processItemMessage(itemBankId);
        } catch (Throwable e) {
            operationalEventService.serviceWarning(logger, e, "Unexpected error when processing item update for item bank id {}", itemBankId);
            throw e;
        }
    }
}
