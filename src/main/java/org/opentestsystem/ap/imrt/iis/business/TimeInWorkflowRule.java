package org.opentestsystem.ap.imrt.iis.business;

import org.opentestsystem.ap.imrt.common.model.ItemGitInformation;
import org.opentestsystem.ap.imrt.common.service.OperationalEventService;
import org.opentestsystem.ap.imrt.iis.model.ItemRevision;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * Business rule to capture the time when the item workflow status was modified
 */
@Component
public class TimeInWorkflowRule implements ItemRevisionComparisonRule {
    private static final Logger LOG = LoggerFactory.getLogger(TimeInWorkflowRule.class);
    private final OperationalEventService logger;

    public TimeInWorkflowRule(final OperationalEventService logger) {
        this.logger = logger;
    }

    @Override
    public ItemRevision applyBusinessRule(ItemGitInformation existing, ItemRevision current) {
        if (null == existing || !current.getItem().getWorkflowStatus().equals(existing.getItem().getWorkflowStatus())) {
            logger.debug(LOG,"Existing workflow {} current workflow {}. Setting workflowStatusSetAt to {}",
                    existing != null ? existing.getItem().getWorkflowStatus() : null,
                    current.getItem().getWorkflowStatus(),
                    current.getItemGitInformation().getCurrentCommitDate());
            current.getItem().setWorkflowStatusSetAt(current.getItemGitInformation().getCurrentCommitDate());
        }
        return current;
    }
}
