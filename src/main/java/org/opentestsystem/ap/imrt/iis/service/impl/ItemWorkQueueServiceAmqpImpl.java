package org.opentestsystem.ap.imrt.iis.service.impl;

import org.opentestsystem.ap.imrt.iis.model.ItemUpdateEvent;
import org.opentestsystem.ap.imrt.iis.service.ItemWorkQueueService;
import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.amqp.core.Queue;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class uses AMQP to implement a work queue
 */
@Service
public class ItemWorkQueueServiceAmqpImpl implements ItemWorkQueueService {
    private final AmqpTemplate amqpTemplate;
    private final Queue updateQueue;
    private final Queue deleteQueue;
    private final Queue validationQueue;
    private final Queue migrationQueue;
    private final Queue syncJobItemQueue;

    @Autowired
    public ItemWorkQueueServiceAmqpImpl(AmqpTemplate amqpTemplate,
                                        final Queue updateQueue,
                                        final Queue deleteQueue,
                                        final Queue validationQueue, final Queue migrationQueue, final Queue syncJobItemQueue) {
        this.amqpTemplate = amqpTemplate;
        this.updateQueue = updateQueue;
        this.deleteQueue = deleteQueue;
        this.validationQueue = validationQueue;
        this.migrationQueue = migrationQueue;
        this.syncJobItemQueue = syncJobItemQueue;
    }

    @Override
    public void sendItemUpdateMessage(ItemUpdateEvent itemUpdateEvent) {
        // Place the item on the queue for later processing
        amqpTemplate.convertAndSend(updateQueue.getName(), itemUpdateEvent);
    }

    @Override
    public void sendItemDeleteMessage(final Integer itemBankId) {
        amqpTemplate.convertAndSend(deleteQueue.getName(), itemBankId);
    }

    @Override
    public void sendItemValidationMessage(final Integer itemBankId) {
        amqpTemplate.convertAndSend(validationQueue.getName(), itemBankId);
    }

    @Override
    public void sendItemMigrationMessage(final Integer itemId) {
        amqpTemplate.convertAndSend(migrationQueue.getName(), itemId);
    }

    @Override
    public void sendItemSyncJobItemEvent(final Integer itemId) {
        amqpTemplate.convertAndSend(syncJobItemQueue.getName(), itemId);
    }
}
