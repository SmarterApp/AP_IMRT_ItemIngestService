package org.opentestsystem.ap.imrt.iis.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.stereotype.Service;

/**
 * Sample class for listening on the ite update queue - just meant as a proof
 * of concept. I'm not crazy about having to hardcode the queue name in the
 * annotation...
 *
 * Checking on the spring default configuration, it appears to be OK for the purpose of
 * creating a simple work queue. Acknowledgements will be sent automatically when the
 * listener completes processing. If it crashes or an exception is thrown, the message
 * will be requeued. In addition, a "fair" dispatching strategy is used, where messages
 * are kept on the queue until there is a free worker.
 */
@Service
public class ItemUpdateService {
    private static final Logger logger = LoggerFactory.getLogger(ItemUpdateService.class);

    @RabbitListener(queues = "item-update")
    public void processMessage(Integer itemId) {
        logger.debug("Received item update message for id {}", itemId);
    }
}
