package org.opentestsystem.ap.imrt.iis.service.impl;

import org.opentestsystem.ap.common.model.Administration;
import org.opentestsystem.ap.common.model.AssessmentItemCore;
import org.opentestsystem.ap.common.model.Form;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.TestAdministration;
import org.opentestsystem.ap.common.imrt.model.BaseItem;
import org.opentestsystem.ap.common.imrt.repository.FormRepository;
import org.opentestsystem.ap.imrt.iis.model.ItemRevision;
import org.opentestsystem.ap.imrt.iis.service.TestAdministrationService;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.List;

import static org.apache.commons.lang.StringUtils.defaultString;

@Service
public class TestAdministrationServiceImpl implements TestAdministrationService {
    private final FormRepository formRepository;

    public TestAdministrationServiceImpl(final FormRepository formRepository) {
        this.formRepository = formRepository;
    }

    @Transactional
    @Override
    public void saveForms(final ItemRevision itemRevision) {
        BaseItem baseItem = itemRevision.getItem();
        Item item = baseItem.getItemJson();

        if (!(item.getCore() instanceof AssessmentItemCore)) {
            return;
        }

        TestAdministration testAdministration = ((AssessmentItemCore) item.getCore()).getTestAdministration();
        List<org.opentestsystem.ap.common.imrt.model.Form> forms = new ArrayList<>();

        //IAT does not enforce unique naming or ids so there is no way for IMRT to determine
        //an update vs delete/add so IMRT deletes all and adds them back
        formRepository.deleteAllByItem(itemRevision.getItem());

        //If the item has not been included in an administration them we cannot capture the data. Null is
        //appropriate here because that signifies that the item doesn't have data
        if (testAdministration == null
                || testAdministration.getAdministrations() == null
                || testAdministration.getAdministrations().isEmpty()) {
            return;
        }

        for (Administration administration : testAdministration.getAdministrations()) {
            for (Form form : administration.getForms()) {
                org.opentestsystem.ap.common.imrt.model.Form itemForm = new org.opentestsystem.ap.common.imrt.model.Form();
                itemForm.setFormId(defaultString(form.getFormId()));
                itemForm.setFormType(defaultString(form.getFormType()));
                itemForm.setAssessmentType(defaultString(form.getAssessmentType()));
                itemForm.setExposures(form.getExposures());
                itemForm.setItem(baseItem);
                itemForm.setUpdatedBy(baseItem.getUpdatedBy());
                forms.add(itemForm);
            }
        }

        formRepository.save(forms);
    }
}
