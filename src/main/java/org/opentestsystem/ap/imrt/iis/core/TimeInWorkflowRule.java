package org.opentestsystem.ap.imrt.iis.core;

import org.opentestsystem.ap.common.imrt.model.BaseItem;
import org.opentestsystem.ap.common.imrt.service.OperationalEventService;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.imrt.iis.model.ItemRevision;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * Business rule to capture the time when the item workflow status was modified
 */
@Component
public class TimeInWorkflowRule implements ItemRevisionComparisonRule {
    private static final Logger LOG = LoggerFactory.getLogger(TimeInWorkflowRule.class);
    private final OperationalEventService logger;

    public TimeInWorkflowRule(final OperationalEventService logger) {
        this.logger = logger;
    }

    @Override
    public ItemRevision applyBusinessRule(final BaseItem existingBaseItem, final Item existingItem, final ItemRevision current) {
        final String existingWorkflow = existingItem == null ? "" : existingItem.getWorkflow().getWorkflowStatusCode();

        if (null == existingItem || !current.getItem().getWorkflowStatus().equals(existingWorkflow)) {
            logger.debug(LOG,"Existing workflow {} current workflow {}. Setting workflowStatusSetAt to {}",
                    existingBaseItem != null ? existingBaseItem.getWorkflowStatus() : null,
                    current.getItem().getWorkflowStatus(),
                    current.getItemGitInformation().getCurrentCommitDate());
            current.getItem().setWorkflowStatusSetAt(current.getItemGitInformation().getCurrentCommitDate());
        }
        return current;
    }
}
