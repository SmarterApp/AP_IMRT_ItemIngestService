package org.opentestsystem.ap.imrt.iis.client;

import org.gitlab4j.api.models.RepositoryFile;

import java.util.Optional;

/**
 * Interface for Item Bank operations
 */
public interface ItemBankClient {
    /**
     * Register an object to be called for item creation and update events
     * @param listener  Listener to be notified for Item creation or updates
     */
    void setItemEventListener(ItemEventListener listener);

    /**
     * Registers an interest in the item. Once this method is called, any changes to the item
     * will result in a call to the onItemUpdate method in the listener.
     *
     * @param itemId  Unique identifier for the item.
     */
    void monitorItem(int itemId);

    /**
     * Retrieve the contents of a file from the Item Bank
     * @param filePath  File path and name, for example "item.json"
     * @param projectId  Unique identifier for the item
     * @param ref  ItemBank ref, for example commit id or branch name
     * @return  The file contents, wrapped in a RepositoryFile object. Optional will be empty
     *          if the file could not be retrieved.
     */
    Optional<RepositoryFile> getFile(String filePath, Integer projectId, String ref);
}
