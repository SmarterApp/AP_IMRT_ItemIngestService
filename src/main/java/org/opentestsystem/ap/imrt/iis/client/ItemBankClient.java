package org.opentestsystem.ap.imrt.iis.client;

import org.gitlab4j.api.models.Commit;
import org.gitlab4j.api.models.RepositoryFile;

import java.time.Instant;
import java.util.List;

/**
 * Interface for Item Bank operations
 */
public interface ItemBankClient {
    /**
     * Register an object to be called for item creation and update events
     *
     * @param listener Listener to be notified for Item creation or updates
     */
    void setItemEventListener(ItemEventListener listener);

    /**
     * Registers an interest in the item. Once this method is called, any changes to the item
     * will result in a call to the onItemUpdate method in the listener.
     *
     * @param itemId Unique identifier for the item.
     */
    void monitorItem(int itemId);

    /**
     * Retrieve the contents of a file from the Item Bank
     *
     * @param filePath File path and name, for example "item.json"
     * @param itemId   Unique identifier for the item
     * @param ref      ItemBank ref, for example commit id or branch name
     * @return The file contents, wrapped in a RepositoryFile object.
     */
    RepositoryFile getFile(String filePath, int itemId, String ref);

    /**
     * Retrieves the history of an item from the item bank
     *
     * @param itemId Unique identifier for the item
     * @param since  Only entries since this date will be returned
     * @return The list of historical commits
     */
    List<Commit> getItemHistory(int itemId, Instant since);

}
