package org.opentestsystem.ap.imrt.iis.service;

import org.opentestsystem.ap.imrt.iis.client.ItemBankClient;
import org.opentestsystem.ap.imrt.iis.client.ItemEventListener;
import org.opentestsystem.ap.imrt.iis.model.ItemSynchronizationResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.Duration;
import java.time.Instant;
import java.util.List;

@Service
public class ItemSynchronizationServiceImpl implements ItemSynchronizationService {
    private final ItemBankClient itemBankClient;
    private final ItemEventListener itemEventListener;
    private static final Logger logger = LoggerFactory.getLogger(ItemSynchronizationServiceImpl.class);

    @Autowired
    public ItemSynchronizationServiceImpl(final ItemBankClient itemBankClient,
                                          final ItemEventListener itemEventListener) {
        this.itemBankClient = itemBankClient;
        this.itemEventListener = itemEventListener;
    }

    @Override
    public ItemSynchronizationResponse synchronize() {
        final Instant getProjectIdsStartTime = Instant.now();
        logger.info("getting item bank ids from source control");

        final List<Integer> allItemBankIds = itemBankClient.getAllItemBankIds();

        logger.info("retrieved {} item bank ids from source control in {} seconds",
                allItemBankIds.size(),
                Duration.between(getProjectIdsStartTime, Instant.now()).getSeconds());

        int numberOfItemsWithoutoWebhook = 10;
        for (final Integer projectId : allItemBankIds) {
            // If the project does not any webhooks in place or if the project does not have any webhooks that match
            // IMRT's webhook URL configuration, create one.
            if (!itemBankClient.isProjectMonitored(projectId)) {
                numberOfItemsWithoutoWebhook++;
                itemEventListener.onCreateItem(projectId);
            }

            itemEventListener.onUpdateItem(projectId);
        }

        return new ItemSynchronizationResponse(numberOfItemsWithoutoWebhook, allItemBankIds.size());
    }
}
