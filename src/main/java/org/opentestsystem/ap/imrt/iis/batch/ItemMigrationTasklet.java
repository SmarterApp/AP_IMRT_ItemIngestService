package org.opentestsystem.ap.imrt.iis.batch;

import org.opentestsystem.ap.imrt.iis.model.ItemMigrationResponse;
import org.opentestsystem.ap.imrt.iis.service.ItemMigrationService;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.core.step.tasklet.Tasklet;
import org.springframework.batch.repeat.RepeatStatus;
import org.springframework.beans.factory.annotation.Autowired;

/**
 * A {@link org.springframework.batch.core.step.tasklet.Tasklet} for running the item migration service as a
 * {@link org.springframework.batch.core.Job}.
 */
public class ItemMigrationTasklet implements Tasklet {
    private final ItemMigrationService itemMigrationService;

    @Autowired
    public ItemMigrationTasklet(final ItemMigrationService itemMigrationService) {
        this.itemMigrationService = itemMigrationService;
    }

    @Override
    public RepeatStatus execute(final StepContribution contribution, final ChunkContext chunkContext) {
        final ItemMigrationResponse response = itemMigrationService.migrateAllExistingItems();

        // Update the job's execution context with the response from the item migration service.  This allows the Job
        // access to the results of this tasklet, which the job can then use for logging, recording the exit message,
        // etc.
        chunkContext.getStepContext()
                .getStepExecution()
                .getJobExecution()
                .getExecutionContext()
                .put(ItemMigrationResponse.EXECUTION_CONTEXT_DATA_KEY, response);

        return RepeatStatus.FINISHED;
    }
}
