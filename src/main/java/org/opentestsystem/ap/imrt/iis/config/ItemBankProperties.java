package org.opentestsystem.ap.imrt.iis.config;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.stereotype.Component;

import java.util.Collections;
import java.util.List;

/**
 * Configuration properties for GitLab.  Any property not given a
 * default value below is expected to have a value defined in the
 * configuration.  Any value with a default is not required to be
 * set in the configuration.  If it is defined it will override the
 * default value.
 */
@Component
@ConfigurationProperties(prefix = "itembank")
public class ItemBankProperties {
    // Gitlab host URL
    private String host;

    // Gitlab accessToken. Must have permission to create web hooks
    private String accessToken;

    // Gitlab group
    private String group;

    // URL we want Gitlab to invoke for merge events
    private String webhookUrl;

    private List<String> projectsToIgnore = Collections.emptyList();

    /**
     * @return the gitlab host
     */
    public String getHost() {
        return host;
    }

    public void setHost(String host) {
        this.host = host;
    }

    /**
     * @return the Gitlab access token
     */
    public String getAccessToken() {
        return accessToken;
    }

    public void setAccessToken(String accessToken) {
        this.accessToken = accessToken;
    }

    /**
     * @return the gitlab group to monitor for ingest (e.g iat-development)
     */
    public String getGroup() {
        return group;
    }

    public void setGroup(String group) {
        this.group = group;
    }

    /**
     * @return the webhook url to use when adding gitlab webhooks to projects.  Should be the publicly accessible URL
     * for ingest service
     */
    public String getWebhookUrl() {
        return webhookUrl;
    }

    public void setWebhookUrl(String webhookUrl) {
        this.webhookUrl = webhookUrl;
    }

    /**
     * @return the list of gitlab projects to ignore
     */
    public List<String> getProjectsToIgnore() {
        return projectsToIgnore;
    }

    public void setProjectsToIgnore(final List<String> projectsToIgnore) {
        this.projectsToIgnore = projectsToIgnore;
    }
}
