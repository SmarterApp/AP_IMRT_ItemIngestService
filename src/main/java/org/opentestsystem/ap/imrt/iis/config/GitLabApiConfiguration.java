package org.opentestsystem.ap.imrt.iis.config;

import org.gitlab4j.api.GitLabApi;
import org.opentestsystem.ap.common.client.GitlabApi;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * A configuration class that will create a new instance of the {@link org.opentestsystem.ap.common.client.GitlabApi}
 * that can be injected into other classes.
 */
@Configuration
public class GitLabApiConfiguration {

    /**
     * Get an instance of the {@link org.gitlab4j.api.GitLabApi}, configured for use with the environment IMRT is
     * configured to communicate with.
     *
     * @param itemBankProperties The {@link org.opentestsystem.ap.imrt.iis.config.ItemBankProperties} describing the
     *                           configuration IMRT needs to communicate with the "Item Bank" (the GitLab environment)
     * @return A {@link org.gitlab4j.api.GitLabApi} configured to communicate with the item bank
     */
    @Bean
    public GitLabApi gitLabApi(final ItemBankProperties itemBankProperties) {
        return new GitLabApi(itemBankProperties.getHost(), itemBankProperties.getAccessToken());
    }

    /**
     * Creates an instance of the {@link GitlabApi}. This has specific AP related Gitlab API's that are more
     * customized that what the other api offers.
     *
     * @param itemBankProperties the properties to configure the api
     * @return a {@link GitlabApi}
     */
    @Bean
    public GitlabApi apGitlabApi(final ItemBankProperties itemBankProperties) {
        return GitlabApi.connect(itemBankProperties.getHost(),
                itemBankProperties.getApiVersion(), itemBankProperties.getAccessToken());
    }
}
