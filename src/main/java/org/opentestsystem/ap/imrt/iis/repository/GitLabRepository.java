package org.opentestsystem.ap.imrt.iis.repository;

import org.gitlab4j.api.models.Branch;
import org.gitlab4j.api.models.Namespace;
import org.gitlab4j.api.models.ProjectHook;
import org.gitlab4j.api.models.RepositoryFile;

import java.util.List;
import java.util.Optional;

/**
 * An interface for interacting with GitLab data
 */
public interface GitLabRepository {
    /**
     * Add a project-level webhook to the project in GitLab.
     *
     * @param itemBankId The item bank identifier (the project_id in GitLab)
     */
    void addProjectHook(final int itemBankId);

    /**
     * Fnd all {@link org.gitlab4j.api.models.Namespace}s for the configured project group name
     *
     * @param projectGroupName The name of the GitLab project group
     * @return A {@link java.util.List<org.gitlab4j.api.models.Namespace>} representing all namespaces for the specified
     * project group name; otherwise {@link java.util.Optional#empty()}
     */
    Optional<List<Namespace>> findAllNamespaces(final String projectGroupName);

    /**
     * Find a specific {@link org.gitlab4j.api.models.RepositoryFile} within the specified
     * {@link org.gitlab4j.api.models.Branch}
     *
     * @param itemBankId The item bank identifier for the file (the project_id in GitLab)
     * @param fileName The name of the file to find
     * @param branchName The name of the {@link org.gitlab4j.api.models.Branch} that contains the file
     * @return A {@link org.gitlab4j.api.models.RepositoryFile} representing the file for the specified item bank id;
     * otherwise {@link java.util.Optional#empty()}
     */
    Optional<RepositoryFile> findFile(final int itemBankId, final String fileName, final String branchName);

    /**
     * Find all {@link org.gitlab4j.api.models.Branch}es for a given item bank id.
     *
     * @param itemBankId The item bank identifier (the project_id in GitLab)
     * @return A {@link java.util.List<org.gitlab4j.api.models.Branch>} representing all branches for the specified item
     * bank identifier; otherwise {@link java.util.Optional#empty()}
     */
    Optional<List<Branch>> findAllBranches(final int itemBankId);

    /**
     * Find all {@link org.gitlab4j.api.models.ProjectHook}s attached to the specified item.
     *
     * @param itemBankId The item bank identifier (the project_id in GitLab)
     * @return A {@link List<org.gitlab4j.api.models.ProjectHook>} representing all project hooks that have been
     * attached to the item.
     */
    Optional<List<ProjectHook>> findAllProjectHooks(final int itemBankId);
}
