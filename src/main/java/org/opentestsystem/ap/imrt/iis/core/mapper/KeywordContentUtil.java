package org.opentestsystem.ap.imrt.iis.core.mapper;

import org.jsoup.Jsoup;
import org.opentestsystem.ap.common.imrt.util.Strings;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Handles HTML conversion for keyword mapping
 */
class KeywordContentUtil {
    private static final Pattern mathmlPattern = Pattern.compile("<math xmlns=(.*?)</math>");

    /**
     * Converts rich text HTML to keyword compatible String
     * @param content the text html
     * @return the converted String
     */
    static String convertContentToKeywordString(String content) {
        String cleanedHtml = content;
        Matcher m = mathmlPattern.matcher(content);
        Map<String, String> mathMlMatches = new HashMap<>();
        while (m.find()) {
            String id = "[" + UUID.randomUUID() + "]";
            String mathMl = m.group();
            mathMlMatches.put(id, mathMl);
            cleanedHtml = cleanedHtml.replace(mathMl, id);
        }

        //Parse and replace nbsp; converted text to single space
        cleanedHtml = Jsoup.parse(cleanedHtml).text().replace("\u00a0", " ");
        cleanedHtml = Strings.condenseSpacesAndRemoveLineBreaks(cleanedHtml);

        for (Map.Entry<String, String> entry : mathMlMatches.entrySet()) {
            cleanedHtml = cleanedHtml.replace(entry.getKey(), entry.getValue());
        }

        return cleanedHtml;
    }
}
