package org.opentestsystem.ap.imrt.iis.service.impl;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.imrt.common.model.BaseItem;
import org.opentestsystem.ap.imrt.common.model.KeywordContent;
import org.opentestsystem.ap.imrt.common.repository.KeywordContentRepository;
import org.opentestsystem.ap.imrt.iis.core.ItemKeywordContentMapper;
import org.opentestsystem.ap.imrt.iis.model.ItemRevision;
import org.opentestsystem.ap.imrt.iis.service.KeywordContentService;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.Collection;

@Service
public class KeywordContentServiceImpl implements KeywordContentService {
    private final KeywordContentRepository keywordContentRepository;
    private final Collection<ItemKeywordContentMapper> itemKeywordContentMappers;

    public KeywordContentServiceImpl(final KeywordContentRepository keywordContentRepository, final Collection<ItemKeywordContentMapper> itemKeywordContentMappers) {
        this.keywordContentRepository = keywordContentRepository;
        this.itemKeywordContentMappers = itemKeywordContentMappers;
    }

    @Transactional
    @Override
    public void saveKeywords(final ItemRevision itemRevision) {
        BaseItem baseItem = itemRevision.getItem();
        Item iatItem = baseItem.getItemJson();
        Collection<KeywordContent> contents = new ArrayList<>();
        for (ItemKeywordContentMapper mapper : this.itemKeywordContentMappers) {
            if (mapper.isSupportedItem(iatItem)) {
                contents = mapper.findKeywordForItem(baseItem, iatItem);
            }
        }

        keywordContentRepository.deleteAllByItem(baseItem);

        if(!contents.isEmpty()) {
            keywordContentRepository.save(contents);
        }
    }
}
